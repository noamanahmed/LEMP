#!/bin/bash

DIR=$(dirname "${BASH_SOURCE[0]}") 
DIR=$(realpath "${DIR}") 

template_path="$(cd $DIR/../ && pwd)/templates"
source $DIR/../includes/helpers.sh

if [ "$EUID" -ne 0 ]
  then echo "Please run as root"
  exit
fi

while [ $# -gt 0 ]; do
  case "$1" in
    -u|--username)
      username="$2"
      shift
      ;;
    -d|--domain)
      domain="$2"
      shift
      ;;        
    *)
      printf "***************************\n"
      printf "* Error: Invalid argument. $1 *\n"
      printf "***************************\n"
      exit 1
  esac  
  shift
done


# if [ -z "$username" ]
# then
#     echo "Please provide a username using -u "
#     exit
# fi


# if [ -z "$domain" ]
# then
#     echo "Please provide a domain using -d "
#     exit
# fi


# if ! id "$username" &>/dev/null
# then
#     echo "The $username already exists!. Please run delete-site -u $username"
#     exit
# fi


# uptime_robot_api_key=$(cat /opt/uptime_robot.key)

# if [ -z "$uptime_robot_api_key" ]
# then    
#   echo "Please set your main uptime robot key at /opt/uptime_robot.key to enable monitors"
# fi

monitor_name=$(hostname)_${username}_monitor
# api_request=$(curl -X POST \
# -H "Cache-Control: no-cache" -H "Content-Type: application/x-www-form-urlencoded" \
# -d "api_key=$uptime_robot_api_key&format=json&type=1&url=https://$domain&friendly_name=$(monitor_name)" \
# "https://api.uptimerobot.com/v2/newMonitor")
api_request='{"stat":"ok","monitor":{"status":1,"id":791584464}}'

api_status=$(echo $api_request | jq -r '.stat')

if [ $api_status != "ok" ]
then    
  echo "API request Failed:"
  echo "JSON Output:"
  echo $api_request
  exit 1
fi

monitor_id=$(echo $api_request | jq -r '.monitor.id')

echo monitor_id > /var/www/home/$username/uptime_robot

echo "Monitor created successfully with ID : $monitor_id with name $monitor_name"

