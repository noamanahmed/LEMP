#!/bin/bash

DIR=$(dirname "${BASH_SOURCE[0]}") 
DIR=$(realpath "${DIR}") 

template_path="$(cd $DIR/../ && pwd)/templates"
source $DIR/../includes/helpers.sh

if [ "$EUID" -ne 0 ]
  then echo "Please run as root"
  exit
fi

while getopts u: flag
do
    case "${flag}" in
        u) username=${OPTARG};;        
    esac
done

if [ -z "$username" ]
then
    echo "Please provide a username using -u "
    exit
fi



if ! id "$username" &>/dev/null
then
    echo "The $username doesn't exist"    
    exit;
fi



if [ ! -f "/etc/nginx/sites-available/$username.conf" ]
then
    echo "This site is already disabled!"    
    exit;
fi


nginx_vhost_path="/etc/nginx/sites-available/$username.conf"
nginx_performance_directive="include /etc/nginx/performance.conf;"
fastcgi_cache_directive="fastcgi_cache $username"

if grep -Fq "#$nginx_performance_directive" $nginx_vhost_path  &&  grep -Fq "#$fastcgi_cache_directive" $nginx_vhost_path 
then
    echo "This has already disable cache. Hit Control+F5 to refresh the browser cache!"    
    exit;
fi

if grep -Fq "$nginx_performance_directive" $nginx_vhost_path
then
sed -i "s/$(echo $nginx_performance_directive | sed 's/\//\\\//g')/#$(echo $nginx_performance_directive | sed 's/\//\\\//g')/g" $nginx_vhost_path
fi


if grep -Fq "$fastcgi_cache_directive" $nginx_vhost_path
then
sed -i "s/$(echo $fastcgi_cache_directive | sed 's/\//\\\//g')/#$(echo $fastcgi_cache_directive | sed 's/\//\\\//g')/g" $nginx_vhost_path
fi

echo "Cache Disabled"
clear-cache -u $username
service nginx reload

