#!/bin/bash

DIR=$(dirname "${BASH_SOURCE[0]}") 
DIR=$(realpath "${DIR}") 

template_path="$(cd $DIR/../ && pwd)/templates"
source $DIR/../includes/helpers.sh

if [ "$EUID" -ne 0 ]
  then echo "Please run as root"
  exit
fi


while [ $# -gt 0 ]; do
  case "$1" in
    -u|--username)
      username="$2"
      shift
      ;;
    -d|--domain)
      domain="$2"
      shift
      ;;
    --mysql)
      mysql=yes
      ;;
    --mongodb)
      mongodb=yes
      ;;
    --port)
      port=0
      ;;    
    *)
      printf "***************************\n"
      printf "* Error: Invalid argument. $1 *\n"
      printf "***************************\n"
      exit 1
  esac  
  shift
done

if [ -z "$username" ]
then
    echo "Please provide a username using -u "
    exit
fi


if [ -z "$domain" ]
then
    echo "Please provide a domain using -d "
    exit
fi

if id "$username" &>/dev/null
then
    echo "The $username already exists!. Please run delete-site -u $username"
    exit
fi

if [ "$port" -eq 0]
then
  echo "Please specify a port using --port for nginx to reverse proxy"
fi

##Create user
bash create-linux-user -u $username

## Adding user to groups
usermod -a -G web $username
usermod -a -G sftp $username
usermod -a -G $username nginx

## Create user directories
user_root="/home/$username"

mkdir -p $user_root
mkdir -p "$user_root/logs"
mkdir -p "$user_root/logs/nginx"
mkdir -p "$user_root/logs/php"
mkdir -p "$user_root/logs/mail"
mkdir -p "$user_root/cache"
mkdir -p "$user_root/cache/nginx"

## Fixing Permissions for nginx logs
chown -R nginx:nginx $user_root/cache/nginx

if [ -d "$mysql" ]
then
  ## Creating MYSQL user and database
  database_name="$(echo $username | head -c 12)"
  database_user="$(echo $username | head -c 12)"
  database_password="$(openssl rand -hex 8)"

  mysql -e "CREATE DATABASE IF NOT EXISTS $database_name"
  mysql -e "DROP USER IF EXISTS '$database_user'@'localhost';"
  mysql -e "CREATE USER '$database_user'@'localhost' IDENTIFIED BY '$database_password'"
  mysql -e "GRANT ALL PRIVILEGES ON $database_name.* To '$database_user'@'localhost'"
  mysql -e "GRANT SESSION_VARIABLES_ADMIN ON *.*  TO '$database_user'@'localhost'";
  mysql -e "FLUSH PRIVILEGES;"
fi


## Creating nginx settings
nginx_vhost_file="/etc/nginx/sites-available/$username.conf"
nginx_vhost_enabled="/etc/nginx/sites-enabled/$username.conf"
cp "$template_path/nginx/vhost.conf" $nginx_vhost_file

sed -i "s/{{www_path}}/$(echo $www_path | sed 's/\//\\\//g')/" $nginx_vhost_file
sed -i "s/{{domain}}/$domain/" $nginx_vhost_file
sed -i "s/{{username}}/$username/g" $nginx_vhost_file
sed -i "s/{{user_root}}/$(echo $user_root | sed 's/\//\\\//g')/" $nginx_vhost_file
sed -i "s/{{port}}/$port/" $nginx_vhost_file

ln -s $nginx_vhost_file $nginx_vhost_enabled
nginx -t && systemctl reload nginx

## Generate SSL
certbot certonly --quiet --webroot -d $domain --non-interactive --agree-tos -m noamanahmed99@gmail.com -w $www_path

## Enabling SSL in nginx settings
sed -i "s/#SSL_DISABLED //" $nginx_vhost_file
nginx -t && systemctl reload nginx

## Setup Log rotation
# cp $template_path/logrotate/site.conf /etc/logrotate.d/site-$username.conf
# sed -i "s/{{username}}/$username/" /etc/logrotate.d/site-$username.conf

## Restart nginx as we added our user to nginx group and for some reason nginx reload doesn't work
systemctl restart nginx

## Setting up backup folder
mkdir -p /backups/$username
chown -R $username:$username /backups/$username 

## Fixing permissions
bash fix-permissions -u $username

## Jail User for a php site
bash jail-user -u $username -p yes

## Switch php version to the one specified 
bash toggle-node -u $username -p 3.0

## Setting up Logrotation
bash logrotate-user -u $username -e yes


echo "*****************************************"
echo "*****************************************"
echo ""
echo "Site Setup succssfull"
echo "URL : http://$domain"
echo "URL(SSL) : https://$domain"
echo "Complete Path : $www_path"
echo ""
if [ -d "$mysql" ]
then
echo ""
echo "MySQL Database Credentials"
echo "Database name: $database_name"
echo "Database user: $database_user"
echo "Database password: $database_password"
fi
echo ""
echo "SFTP/SSH Details"
echo "Host: $domain"
echo "Port: 22"
echo "Username: $username"
echo "Password: $user_password"





