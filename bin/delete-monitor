#!/bin/bash

DIR=$(dirname "${BASH_SOURCE[0]}") 
DIR=$(realpath "${DIR}") 

template_path="$(cd $DIR/../ && pwd)/templates"
source $DIR/../includes/helpers.sh

if [ "$EUID" -ne 0 ]
  then echo "Please run as root"
  exit
fi

while [ $# -gt 0 ]; do
  case "$1" in
    -u|--username)
      username="$2"
      shift
      ;;
    *)
      printf "***************************\n"
      printf "* Error: Invalid argument. $1 *\n"
      printf "***************************\n"
      exit 1
  esac  
  shift
done


if [ -z "$username" ]
then
    echo "Please provide a username using -u "
    exit
fi



if ! id "$username" &>/dev/null
then
    echo "The $username already exists!. Please run delete-site -u $username"
    exit
fi



if [ ! -f "/opt/uptime_robot.key" ]
then      
  exit 1
fi

uptime_robot_api_key=$(cat /opt/uptime_robot.key)

if [ -z "$uptime_robot_api_key" ]
then    
  echo "Please set your main uptime robot key at /opt/uptime_robot.key to create/delete monitors"
  exit 1
fi


if [ ! -f "/var/www/home/$username/uptime_robot" ]
then    
  echo "There is no monitor available"
  exit 1
fi

monitor_id=$(cat /var/www/home/$username/uptime_robot)

if [ -z "$monitor_id" ]
then    
  echo "There is no monitor id available"
  exit 1
fi

api_request=$(curl -X POST -H "Cache-Control: no-cache" -H "Content-Type: application/x-www-form-urlencoded" \
-d "api_key=${uptime_robot_api_key}&format=json&id=${monitor_id}" \
"https://api.uptimerobot.com/v2/deleteMonitor")


api_status=$(echo $api_request | jq -r '.stat')

if [ $api_status != "ok" ]
then    
  echo "API request Failed:"
  echo "JSON Output:"
  echo $api_request
  exit 1
fi

rm -rf /var/www/home/$username/uptime_robot

echo "Monitor delete successfully with ID : $monitor_id"
