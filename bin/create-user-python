#!/bin/bash

DIR=$(dirname "${BASH_SOURCE[0]}") 
DIR=$(realpath "${DIR}") 

template_path="$(cd $DIR/../ && pwd)/templates"
source $DIR/../includes/helpers.sh

if [ "$EUID" -ne 0 ]
  then echo "Please run as root"
  exit
fi

while getopts u:d:p:l:w: flag
do
    case "${flag}" in
        u) username=${OPTARG};;        
        d) domain=${OPTARG};;
        p) php=${OPTARG};;
        l) laravel=${OPTARG};;
        w) wordpress=${OPTARG};;
    esac
done

if [ -z "$username" ]
then
    echo "Please provide a username using -u "
    exit
fi


if [ -z "$domain" ]
then
    echo "Please provide a domain using -d "
    exit
fi


if [ -z "$php" ]
then
php_version="7.4"
else
php_version=$php
fi


if id "$username" &>/dev/null
then
    echo "The $username already exists!. Please run delete-site -u $username"
    exit
fi

## Create system user if doesnt't exists

# $system_root="/home/$username";
# mkdir -p $system_root
# mkdir -p "$system_root/php/$php_version"


##Create user
pam-auth-update
chmod 640 /etc/shadow
user_password="$(openssl rand -hex 12)"

adduser --gecos "" --disabled-password $username
echo "$username:$user_password" | sudo chpasswd

## Adding user to groups
usermod -a -G web $username
usermod -a -G sftp $username
usermod -a -G $username nginx

## Create user directories
user_root="/home/$username"

mkdir -p $user_root
mkdir -p "$user_root/logs"
mkdir -p "$user_root/logs/nginx"
mkdir -p "$user_root/logs/php"
mkdir -p "$user_root/logs/mail"
mkdir -p "$user_root/cache"
mkdir -p "$user_root/cache/nginx"

if [ -z "$laravel" ]
then
www_path=$user_root/www
else
mkdir -p $user_root/www/
www_path=$user_root/www/public
fi


#mkdir -p "$user_root/cache/php"

## Fixing Permissions for nginx logs
chown -R $username:$username $user_root/logs/php
chown -R nginx:nginx $user_root/cache/nginx

## Setting up default static HTML site
mkdir -p $www_path
cp $template_path/www/*.php $www_path/
cp $template_path/www/*.html $www_path/

## Creating PHP FPM Pool
mkdir -p /opt/php-fpm/$username
chown $username:$username /opt/php-fpm/$username

## Setup all versions of pHP for quick switching(Needs to be optimized to allow one active PHP Versin per site/user)
php_versions_array=("7.3" "7.4" "8.0" "8.1")

for php_v in ${php_versions_array[@]}; do
    sudo cp /etc/php/$php_v/fpm/pool.d/template.tpl /etc/php/$php_v/fpm/pool.d/$username.conf
    sed -i "s/{{\$username}}/$username/" /etc/php/$php_v/fpm/pool.d/$username.conf
    systemctl restart php$php_v-fpm
done

## Setup PHP-fpm for www
ln -s /var/run/php/$username-$(echo "php$php" | sed 's/\.//')-fpm.sock /opt/php-fpm/$username/php-fpm.sock
chown $username:$username /opt/php-fpm/$username/php-fpm.sock


## Creating MYSQL user and database
database_name="$(echo $username | head -c 12)"
database_user="$(echo $username | head -c 12)"
database_password="$(openssl rand -hex 8)"

mysql -e "CREATE DATABASE IF NOT EXISTS $database_name"
mysql -e "DROP USER IF EXISTS '$database_user'@'localhost';"
mysql -e "CREATE USER '$database_user'@'localhost' IDENTIFIED BY '$database_password'"
mysql -e "GRANT ALL PRIVILEGES ON $database_name.* To '$database_user'@'localhost'"
mysql -e "GRANT SESSION_VARIABLES_ADMIN ON *.*  TO '$database_user'@'localhost'";
mysql -e "FLUSH PRIVILEGES;"



## Creating nginx settings
nginx_vhost_file="/etc/nginx/sites-available/$username.conf"
nginx_vhost_enabled="/etc/nginx/sites-enabled/$username.conf"
cp "$template_path/nginx/vhost.conf" $nginx_vhost_file

sed -i "s/{{www_path}}/$(echo $www_path | sed 's/\//\\\//g')/" $nginx_vhost_file
sed -i "s/{{domain}}/$domain/" $nginx_vhost_file
sed -i "s/{{username}}/$username/g" $nginx_vhost_file
sed -i "s/{{user_root}}/$(echo $user_root | sed 's/\//\\\//g')/" $nginx_vhost_file
sed -i "s/{{php_version}}/$php_version/" $nginx_vhost_file

ln -s $nginx_vhost_file $nginx_vhost_enabled
nginx -t && systemctl reload nginx

## Generate SSL
certbot certonly --quiet --webroot -d $domain --non-interactive --agree-tos -m noamanahmed99@gmail.com -w $www_path

## Enabling SSL in nginx settings
sed -i "s/#SSL_DISABLED //" $nginx_vhost_file
nginx -t && systemctl reload nginx

## Setup Log rotation
# cp $template_path/logrotate/site.conf /etc/logrotate.d/site-$username.conf
# sed -i "s/{{username}}/$username/" /etc/logrotate.d/site-$username.conf

## Restart nginx as we added our user to nginx group and for some reason nginx reload doesn't work
systemctl restart nginx

## Setting up backup folder
mkdir -p /backups/$username
chown -R $username:$username /backups/$username 

## Fixing permissions
bash fix-permissions -u $username

## Jail User for a php site
bash jail-user -u $username -p yes

## Switch php version to the one specified 
bash toggle-python -u $username -p 3.0

## Setting up Logrotation
bash logrotate-user -u $username -e yes


echo "*****************************************"
echo "*****************************************"
echo ""
echo "Site Setup succssfull"
echo "URL : http://$domain"
echo "URL(SSL) : https://$domain"
echo "Complete Path : $www_path"
echo ""
echo ""
echo "MySQL Database Credentials"
echo "Database name: $database_name"
echo "Database user: $database_user"
echo "Database password: $database_password"
echo ""
echo "SFTP/SSH Details"
echo "Host: $domain"
echo "Port: 22"
echo "Username: $username"
echo "Password: $user_password"





