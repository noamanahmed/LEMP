#!/bin/bash

DIR=$(dirname "${BASH_SOURCE[0]}") 
DIR=$(realpath "${DIR}") 

template_path="$(cd $DIR/../ && pwd)/templates"
source $DIR/../includes/helpers.sh

if [ "$EUID" -ne 0 ]
  then echo "Please run as root"
  exit
fi

while [ $# -gt 0 ]; do
  case "$1" in
    -u|--username)
      username="$2"
      shift
      ;;
    -d|--domain)
      domain="$2"
      shift
      ;;
    --php)
      php="$2"
      shift
      ;;
    --wordpress)
      wordpress=yes
      ;;
    --laravel)
      laravel=yes
      ;;    
    *)
      printf "***************************\n"
      printf "* Error: Invalid argument. $1 *\n"
      printf "***************************\n"
      exit 1
  esac  
  shift
done

if [ -z "$username" ]
then
    echo "Please provide a username using -u "
    exit
fi


if [ -z "$domain" ]
then
    echo "Please provide a domain using -d "
    exit
fi


if id "$username" &>/dev/null
then
    echo "The $username already exists!. Please run delete-user -u $username"
    exit
fi


php_versions_array=("8.1" "8.0" "7.4" "7.3" "7.2" "7.1" "7.0" "5.6" )

if [[ ! " ${php_versions_array[*]} " =~ " ${php} " ]]; then
    echo "This is not a valid PHP Version"
    exit 1;
fi


##Create user
user_password="$(openssl rand -hex 12)"
bash create-linux-user -u $username -p $user_password

## Jail User for a php site
bash jail-user -u $username -p yes


## Adding user to groups
usermod -a -G web $username
usermod -a -G sftp $username
usermod -a -G nginx $username
#usermod -a -G $username nginx

## Create user directories
chroot_path=/var/www
user_root=/home/$username
chroot_home=$chroot_path/$user_root

mkdir -p $chroot_home
mkdir -p $chroot_home/logs
mkdir -p $chroot_home/logs/nginx
mkdir -p $chroot_home/logs/php
mkdir -p $chroot_home/logs/mail
mkdir -p $chroot_home/cache
mkdir -p $chroot_home/cache/nginx
mkdir -p $chroot_home/www/

www_path=$chroot_home/www

if [ -n "$laravel" ]
then
  www_path=$chroot_home/www/public
fi


#mkdir -p "$user_root/cache/php"

## Fixing Permissions for nginx logs
chown -R $username:$username $chroot_home/logs/php
chown -R nginx:nginx $chroot_home/cache/nginx

## Setting up default static HTML site
mkdir -p $www_path
cp $template_path/www/*.php $www_path
cp $template_path/www/*.html $www_path

## Setup PHP
sudo cp $template_path/php/template.tpl /etc/php/$php/fpm/pool.d/$username.conf
sed -i "s/{{username}}/$username/" /etc/php/$php/fpm/pool.d/$username.conf
sed -i "s/{{user_root}}/$(echo $chroot_home | sed 's/\//\\\//g')/" /etc/php/$php/fpm/pool.d/$username.conf
systemctl restart php$php-fpm

## Creating MYSQL user and database
database_name="$(echo $username | head -c 12)"
database_user="$(echo $username | head -c 12)"
database_password="$(openssl rand -hex 8)"

mysql -e "CREATE DATABASE IF NOT EXISTS $database_name"
mysql -e "DROP USER IF EXISTS '$database_user'@'localhost';"
mysql -e "CREATE USER '$database_user'@'localhost' IDENTIFIED BY '$database_password'"
mysql -e "GRANT ALL PRIVILEGES ON $database_name.* To '$database_user'@'localhost'"
mysql -e "GRANT SESSION_VARIABLES_ADMIN ON *.*  TO '$database_user'@'localhost'";
mysql -e "FLUSH PRIVILEGES;"



## Creating nginx settings
nginx_vhost_file="/etc/nginx/sites-available/$username.conf"
nginx_vhost_enabled="/etc/nginx/sites-enabled/$username.conf"
cp "$template_path/nginx/php/vhost.conf" $nginx_vhost_file

sed -i "s/{{www_path}}/$(echo $www_path | sed 's/\//\\\//g')/" $nginx_vhost_file
sed -i "s/{{domain}}/$domain/" $nginx_vhost_file
sed -i "s/{{username}}/$username/g" $nginx_vhost_file
sed -i "s/{{user_root}}/$(echo $chroot_home | sed 's/\//\\\//g')/" $nginx_vhost_file
sed -i "s/{{php_version}}/$php_version/" $nginx_vhost_file


ln -s $nginx_vhost_file $nginx_vhost_enabled
nginx -t && systemctl reload nginx

## Generate SSL
certbot certonly --quiet --webroot -d $domain --non-interactive --agree-tos -m noamanahmed99@gmail.com -w $www_path

## Enabling SSL in nginx settings
sed -i "s/#SSL_DISABLED //" $nginx_vhost_file
nginx -t && systemctl reload nginx

## Setup Log rotation
# cp $template_path/logrotate/site.conf /etc/logrotate.d/site-$username.conf
# sed -i "s/{{username}}/$username/" /etc/logrotate.d/site-$username.conf

## Restart nginx as we added our user to nginx group and for some reason nginx reload doesn't work
systemctl restart nginx

## Setting up backup folder
mkdir -p /backups/$username
chown -R $username:$username /backups/$username 

## Fixing permissions
bash fix-permissions -u $username

## Switch php version to the one specified 
bash toggle-php -u $username -p $php

## Setting up Logrotation
bash logrotate-user -u $username -e yes


if [ -n "$wordpress" ]
then

    wp_password="$(openssl rand -hex 8)"
    su - $username -c "cd $www_path && wp core download"
    su - $username -c "cd $www_path && wp core config --dbhost=127.0.0.1 --dbname=$database_name --dbuser=$database_user --dbpass=$database_password"
    su - $username -c "cd $www_path && wp core install  --url=$domain --title=$domain --admin_user=$username --admin_password=$wp_password --admin_email=noamanahmed99@gmail.com"
    # runuser -l $username -c "cd /home/$username/www && wp option update siteurl $(wp option get siteurl | sed  's/http:\/\//https:\/\//')"
    # runuser -l $username -c "cd /home/$username/www && wp option update home $(wp option get home | sed  's/http:\/\//https:\/\//')"


fi


echo "*****************************************"
echo "*****************************************"
echo ""
echo "Site Setup succssfull"
echo "URL : http://$domain"
echo "URL(SSL) : https://$domain"
echo "Complete Path : /home/$username/www"
echo ""
if [ -n "$wordpress" ]
then
echo ""
echo "WordPress user: $username"
echo "WordPress password: $wp_password"
echo ""
fi
echo ""
echo "MySQL Database Credentials"
echo "Database name: $database_name"
echo "Database user: $database_user"
echo "Database password: $database_password"
echo ""
echo "SFTP/SSH Details"
echo "Host: $domain"
echo "Port: 22"
echo "Username: $username"
echo "Password: $user_password"





