#!/bin/bash

while getopts p: flag
do
    case "${flag}" in
        p) python=${OPTARG};;        
    esac
done


if [ -z "$python" ]
then
    echo "Please provide a python version using -p "
    exit
fi

python_versions_array=( "2.7" "3.5" "3.6" "3.7" "3.8" "3.9" "3.10")

if [[ ! " ${python_versions_array[*]} " =~ " ${python} " ]]; then
    echo "This is not a valid python Version"
    exit 1;
fi

if ! id "$username" &>/dev/null
then
    echo "The $username doesn't exist"    
    exit;
fi


echo "Switching CLI Python Version to $python"
if [ -L "/var/www/home/$username/.local/bin/python" ]
then
    rm -rf /var/www/home/$username/.local/bin/python
fi


ln -s ../../../../bin/$(echo "python$python" | sed 's/\.//') /var/www/home/$username/.local/bin/python 
chown -h $username:$username /var/www/home/$username/.local/bin/python

echo "Changing PIP"

if [ -L "/var/www/home/$username/.local/bin/pip" ]
then
    rm -rf /var/www/home/$username/.local/bin/pip
fi
ln -s ../../../../bin/pip$python /var/www/home/$username/.local/bin/pip 
chown -h $username:$username /var/www/home/$username/.local/bin/pip

# if [  ! -d "/var/www/home/$username/.virtualenv" ]
# then
#     virtualenv /var/www/home/$username/.virtualenv
    
# fi

# source /var/www/home/$username/.virtualenv/bin/activate

# if (( $(echo "$python >= 3" |bc -l) ))
# then
    # curl https://bootstrap.pypa.io/get-pip.py --output /var/www/home/$username/tmp/get-pip.py
    # python3 /var/www/home/$username/tmp/get-pip.py
    # ln -s ../../../../bin/pip$python /var/www/home/$username/.local/bin/pip 
# else
    # curl https://bootstrap.pypa.io/pip/2.7/get-pip.py --output /var/www/home/$username/tmp/get-pip.py
    # python2 /var/www/home/$username/tmp/get-pip.py
    # ln -s ../../../../bin/pip$python /var/www/home/$username/.local/bin/pip 
# fi

# rm /var/www/home/$username/tmp/get-pip.py

# Allow chroot users to restart ONLY THERE SITE.service
# if [ -f "/etc/systemd/system/$username-site.service" ] 
# then
#     echo "Restarting systemd service $username-site.service"
#     systemctl restart $username-site    
# fi


echo "Clearing Cache"
clear-cache -u $username

