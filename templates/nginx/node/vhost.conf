fastcgi_cache_path /home/{{username}}/cache/nginx/ levels=1:2 keys_zone={{username}}:10m max_size=64m inactive=1h;

server {	
	root {{www_path}};
	index index.php index.html index.htm;
	server_name {{domain}};
	    
	error_log {{user_root}}/logs/nginx/error.log;

	include /etc/nginx/performance.conf;

	## PHP with FastCGI Caching
	add_header X-Cache $upstream_cache_status;

	location /{	
		# Setup var defaults
		set $no_cache "";
		# If non GET/HEAD, don't cache & mark user as uncacheable for 1 second via cookie
		if ($request_method !~ ^(GET|HEAD)$) {
			set $no_cache "1";
		}
		# Drop no cache cookie if need be
		# (for some reason, add_header fails if included in prior if-block)
		if ($no_cache = "1") {
			add_header Set-Cookie "_mcnc=1; Max-Age=2; Path=/";
			add_header X-Microcachable "0";
		}
		# Bypass cache if no-cache cookie is set
		if ($http_cookie ~* "_mcnc") {
					set $no_cache "1";
		}
		
		# Bypass cache if flag is set
		fastcgi_no_cache $no_cache;
		fastcgi_cache_bypass $no_cache;
		fastcgi_cache {{username}};
		fastcgi_cache_key $scheme$host$request_uri$request_method;
		fastcgi_cache_valid 200 301 302 10m;
		fastcgi_cache_use_stale updating error timeout invalid_header http_500;
		fastcgi_pass_header Set-Cookie;
		fastcgi_pass_header Cookie;
		fastcgi_ignore_headers Cache-Control Expires Set-Cookie;

        try_files $uri $uri/ =404;
		fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
		fastcgi_pass 127.0.0.1:{{port}};        
	}

	location ~ /\.ht {
		deny all;
	}

	#SSL_DISABLED listen 443 ssl http2; # managed by Certbot
    #SSL_DISABLED ssl_certificate /etc/letsencrypt/live/{{domain}}/fullchain.pem; # managed by Certbot
    #SSL_DISABLED ssl_certificate_key /etc/letsencrypt/live/{{domain}}/privkey.pem; # managed by Certbot
	#SSL_DISABLED ssl_trusted_certificate /etc/letsencrypt/live/{{domain}}/chain.pem; # managed by Certbot
    #SSL_DISABLED include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    #SSL_DISABLED ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}